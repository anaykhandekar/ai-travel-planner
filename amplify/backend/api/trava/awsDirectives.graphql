# see documentation here: https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html
scalar AWSDate
scalar AwsTime
scalar AWSDateTime
scalar AWSTimestamp
scalar AWSEmail
scalar AWSJSON
scalar AWSPhone
scalar AWSURL
scalar AWSIPAddress

# directives documentation: https://docs.amplify.aws/cli/graphql-transformer/directives
directive @model(
  queries: ModelQueryMap
  mutations: ModelMutationMap
  subscriptions: ModelSubscriptionMap
  timestamps: TimestampConfiguration
) repeatable on OBJECT
input ModelMutationMap {
  create: String
  update: String
  delete: String
}
input ModelQueryMap {
  get: String
  list: String
}
input ModelSubscriptionMap {
  onCreate: [String]
  onUpdate: [String]
  onDelete: [String]
  level: ModelSubscriptionLevel
}
enum ModelSubscriptionLevel {
  off
  public
  on
}
input TimestampConfiguration {
  createdAt: String
  updatedAt: String
}

directive @key(fields: [String!]!, name: String, queryField: String) repeatable on OBJECT

#When applied to a type, augments the application with
# owner and group-based authorization rules.
directive @auth(rules: [AuthRule!]!) repeatable on OBJECT | FIELD_DEFINITION
input AuthRule {
  allow: AuthStrategy!
  provider: AuthProvider
  ownerField: String # defaults to "owner" when using owner auth
  identityClaim: String # defaults to "username" when using owner auth
  groupClaim: String # defaults to "cognito:groups" when using Group auth
  groups: [String] # Required when using Static Group auth
  groupsField: String # defaults to "groups" when using Dynamic Group auth
  operations: [ModelOperation] # Required for finer control
  # The following arguments are deprecated. It is encouraged to use the 'operations' argument.
  queries: [ModelQuery]
  mutations: [ModelMutation]
}
enum AuthStrategy {
  owner
  groups
  private
  public
}
enum AuthProvider {
  apiKey
  iam
  oidc
  userPools
}
enum ModelOperation {
  create
  update
  delete
  read
}

# The following objects are deprecated. It is encouraged to use ModelOperations.
enum ModelQuery {
  get
  list
}
enum ModelMutation {
  create
  update
  delete
}

directive @function(name: String!, region: String) repeatable on FIELD_DEFINITION

directive @http(method: HttpMethod, url: String!, headers: [HttpHeader]) repeatable on FIELD_DEFINITION
enum HttpMethod {
  PUT
  POST
  GET
  DELETE
  PATCH
}
input HttpHeader {
  key: String
  value: String
}

directive @predictions(actions: [PredictionsActions!]!) repeatable on FIELD_DEFINITION
enum PredictionsActions {
  identifyText # uses Amazon Rekognition to detect text
  identifyLabels # uses Amazon Rekognition to detect labels
  convertTextToSpeech # uses Amazon Polly in a lambda to output a presigned url to synthesized speech
  translateText # uses Amazon Translate to translate text from source to target language
}

# Streams data from DynamoDB to Elasticsearch and exposes search capabilities.
directive @searchable(queries: SearchableQueryMap) repeatable on OBJECT
input SearchableQueryMap {
  search: String
}

directive @connection(keyName: String, fields: [String!], limit: Int) on FIELD_DEFINITION

directive @aws_api_key repeatable on FIELD_DEFINITION | OBJECT
directive @aws_cognito_user_pools repeatable on FIELD_DEFINITION | OBJECT
directive @aws_iam repeatable on FIELD_DEFINITION | OBJECT

directive @versioned(versionField: String = "version", versionInput: String = "expectedVersion") on OBJECT

directive @hook(name: String, before: HookMethodMap, after: HookMethodMap, region: String) repeatable on OBJECT

input HookMethodMap {
  get: Boolean
  list: Boolean
  create: Boolean
  update: Boolean
  delete: Boolean
}
